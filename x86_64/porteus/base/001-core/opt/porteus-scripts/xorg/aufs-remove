#!/bin/bash
# Remove a module from the /union on the fly.
# This may fail for many cases, most likely when your module is 'busy'
# - for example if you have files open from the module yet.
#
# Author: Tomas M. <http://www.linux-live.org>
# Completely rewritten for Porteus by fanthom.

MOD=/mnt/live/memory/images/"$1"
targetmod="$1"

if [ ! -d "$MOD" ]; then
    echo "$1: Module is not activated"
    exit 1
fi

# Arch specific variables:
if [ `uname -m|grep "x86_64"` ]; then
    lib=lib64
else
    lib=lib
fi

# Try to simply remove the dir first. If succeeds, finish:
rmdir "$MOD" 2>/dev/null && exit 0

# Find and stop all daemons which may be started by this module:
for SCRIPT in `find "$MOD"/etc/rc.d "$MOD"/etc/init.d "$MOD"/etc/rc.d/init.d -type f -executable -maxdepth 1 2>/dev/null | egrep -v 'rc.[0-9]|rc.K|rc.S|rc.M' | sed s^"$MOD"^^ | sort -u`; do $SCRIPT stop; done

# Check for certain files to update system caches if necessary:
[ -e "$MOD"/usr/share/mime ] && mime=yes
[ -e "$MOD"/usr/share/fonts ] && fonts=yes
[ -e "$MOD"/usr/share/glib-2.0/schemas ] && schemas=yes
[ -e "$MOD"/usr/$lib/gio/modules ] && modules=yes
[ -e "$MOD"/usr/$lib/gtk-2.0/*/immodules ] && immodules=yes
[ -e "$MOD"/usr/$lib/gtk-3.0/*/immodules ] && immodules=yes
[ -e "$MOD"/etc/ssl/certs ] && certs=yes
[ -e "$MOD"/usr/share/applications ] && desktop=`find $MOD/usr/share/applications -name "*.desktop" 2>/dev/null`

# Multilib support for x86_64 arch:
if [ $lib = lib64 ]; then
    [ -e "$MOD"/usr/lib/gtk-2.0/*/immodules ] && immodules=yes
    [ -e "$MOD"/usr/lib/gtk-3.0/*/immodules ] && immodules=yes
    [ -e "$MOD"/usr/lib/gdk-pixbuf-*/*/loaders ] && pixbuf=yes
    [ -e "$MOD"/usr/lib/pango/*/modules ] && pango=yes
fi

# Detach it from aufs union. This may take some time:
mount -t aufs -o remount,del:"$MOD" aufs / 2>/dev/null

if [ $? -ne 0 ]; then
   echo "$1: The module can't be removed, because it's busy (used)."
   exit 2
fi

# If we are here, the module has been successfuly removed from aufs union
# so now we have to umount the module:
umount -nd "$MOD" >/dev/null 2>&1
rmdir "$MOD" 2>/dev/null

# Detach loop device if module was mounted by initrd:
[ `losetup -a | grep $1 | cut -d: -f1` ] && losetup -d `losetup -a | grep $1 | cut -d: -f1`

# Mark caches for update:
touch /mnt/live/tmp/caches/ldconfig
[ $mime ] && touch /mnt/live/tmp/caches/mime
[ $fonts ] && touch /mnt/live/tmp/caches/fonts
[ $schemas ] && touch /mnt/live/tmp/caches/schemas
[ $gio ] && touch /mnt/live/tmp/caches/gio
[ $immodules ] && touch /mnt/live/tmp/caches/immodules
[ $certs ] && touch /mnt/live/tmp/caches/certs
[ "$desktop" ] && echo "$desktop" >> /mnt/live/tmp/caches/desktop-uninstall
[ $pixbuf ] && touch /mnt/live/tmp/caches/pixbuf
[ $pango ] && touch /mnt/live/tmp/caches/pango

exit 0
