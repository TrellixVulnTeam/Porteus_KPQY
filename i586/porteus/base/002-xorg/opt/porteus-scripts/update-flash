#!/bin/bash

# Copyright 2016-2020  Jay Flood, SP, Brasil
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Author: brokenman@porteus.org
#
# This is a starter script to download a live script and update flash.

# Source porteus functions
. /usr/share/porteus/porteus-functions
get_colors

# Get the server
SERVER=`awk -F= '/SERVER=/{print$NF}' /etc/porteus.conf`
LIVESCRIPT="$SERVER/i586/testing/live/update-flash-live"

ARCH=`uname -m`
case "$ARCH" in
  i?86) ARCH="i386" ; LIBDIRSUFFIX=""; MARCH=i586; ANTIARCH=x86_64 ;;
  x86_64) ARCH="amd64" ; LIBDIRSUFFIX="64" ; MARCH=x86_64; ANTIARCH=i386 ;;
  *) echo "Package for $(uname -m) architecture is not available." ; exit 1 ;;
esac

########## Start checks

# Check for root
if [ `whoami` != "root" ]; then
	sayerror "Only root can do that"
	exit
		else
	sayok "User is root"
fi
sleep 0.5

# Check for porteus
is_porteus && sayok "Distro is Porteus" || { sayerror "Distro is not Porteus"; cleanup; }
sleep 0.5

# Check for flash
if [ -e /usr/lib${LIBSUFFIX}/mozilla/plugins/libflashplayer.so ]; then
	sayok "Flash is installed"
		else
	sayok "Flash is not installed"
fi
sleep 0.5
echo

# Check we are online
is_online_url $SERVER && sayok "Internet connection exists" || { sayerror "An internet connection is required"; exit; }

# Download the live script
# Download the live script
echo "Downloading live script ..."
download $LIVESCRIPT /tmp || { red "Failed to download live script."; exit 1; }
chmod +x /tmp/update-flash-live
mv /tmp/update-flash-live /usr/local/bin
/usr/local/bin/update-flash-live
exit
